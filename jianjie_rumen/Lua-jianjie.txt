Lua是什么？
1993年在巴西里约热内卢天主教大学诞生了一门编程语言，发明者是该校的三位研究人员，
他们给这门语言取了个浪漫的名字--Lua，在葡萄牙里代表美丽的月亮。事实证明她没有糟
蹋这个优美的单词，Lua语言正如它名字所预示的那样成长为一门简介、优雅且富有乐趣的
语言。

Lua从一开始就是作为一门方便嵌入（其他应用程序）并可拓展的轻量级脚本语言来设计的
，因此她一直遵从着简单、小巧、可移植、快速的原则，官方实现完全采用ANSI C编写，能
以C程序库的形式嵌入到宿主机杼程序中。LuaJIT2和标准Lua5.1解释器采用的是著名的MIT
许可协议。正由于上述特点，所以Lua在游戏开发、机器人控制、分布式应用、图像处理、
生物信息学等各种各样的领域中得到了越来越广泛的应用。其中尤以游戏开发为最，许多著
名的游戏，比如Escape from Mokey Island、World of Warcraft、大话西游，都采用了Lua
来配合引擎完成数据描述、配置管理和逻辑控制等任务。即使像Redis这样的内存键值数据
库也提供了内嵌用户Lua脚本的官方支持。

作为一门过程型动态语言，Lua有着如下的特性：
1.变量名没有类型，值才有类型，变量名在运行时刻与任何类型的值绑定；
2.语言只提供唯一一种数据结构，称为表（table），它混合了数组、哈希，可以用任何类
  型的值作为key和value.提供了一致且富有表达力的构造语法，使得Lua很适合描述复杂的
  数据；
3.函数是一等类型。支持匿名函数和正则尾递归(proper tail recursion);
4.支持词法定界(lexical scoping)和闭包(closure)
5.提供thread类型和结构化的协程(coroutine)机制，在此基础上可方便实现协作式多任务
  ；
6.运行期能编译字符串形式的程序文本并载入虚拟机执行；
7.通过元表(metatable)和元方法(metathod)提供动态元机制(dynamic metamechanism),从
  而允许程序运行时根据需要改变或扩充语法设施的内定语义；
8.能放百年地利用表和动态元机制实现基于原型(prototype-based)的面向对象模型；
9.从5.1版本开始提供了完善的模块机制，从而更好地支持开发大型的应用程序；

Lua的语法类似PASCAL和Modula但更加简洁，所有的语法产生规则(EBNF)不过才60多个。熟
悉C和PASCAL的程序员一般只需半个小时便可将其完全掌握。而在语义上Lua则与Scheme极为
相似，他们完全共享上述的1、3、4、6点特性，Scheme的continuation与协程也基本相同，
只是自由程度更高。最引人注目的是，两种语言都只提供唯一一种数据结构：Lua的表和
Scheme的列表(list).正因为如此，有人甚至称Lua为"只用表的Scheme"。

Lua和LuaJIT的区别
Lua非常高效，它运行的比许多其它脚本(如Perl、Python、Ruby)都快，这点在第三方的独
立评测中得到了证实。尽管如此，仍然会有人不满足，他们总觉得“嗯，还不够快！”。
LuaJIT就是一个为了再榨出一些速度尝试，它利用即时编译(Just-in Time)技术把Lua代码
编译成本地机器码后交由CPU直接执行。LuaJIT2的测评报告表明，在数值运算、循环与函数
调用、协程切换、字符串操作等许多方面它的加速效果都很显著。凭借着FFI特性，LuaJIT2
在那些需要频繁地调用外部C/C++代码的场景，也要比标准Lua解释器快很多。目前LuaJIT2
已经支持包括i386、x86_64、ARM、PowerPC以及MIPS等多种不同体系结构。

LuaJIT是采用C和汇编语言编写的Lua解释器与即时编译器。LuaJIT被设计成全兼容标准的
Lua5.1语言，同时可选地支持Lua5.2和Lua5.3中的一些不不破坏向后兼容性的有用特性。因
此，标准Lua语言的代码可以不加修改地运行在LuaJIT之上。LuaJIT和标准Lua解释器的一大
区别是，LuaJIT的执行速度，即使是其汇编编写的Lua解释器，也要比标准Lua5.1解释器快
很多，可以说是一个高效的Lua实现。另一个区别是，LuaJIT支持比标准Lua5.1语言更多的
基本原语和特性，因此功能上也要更加强大。
Lua官网：http://www.lua.org
LuaJIT官网:http://luajit.org


